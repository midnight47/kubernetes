apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    k8s-app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch
  labels:
    k8s-app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: elk
  name: elasticsearch
  labels:
    k8s-app: elasticsearch
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: elasticsearch
  namespace: elk
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch
  apiGroup: ""

---
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    k8s-app: elasticsearch
spec:
  selector:
    k8s-app: elasticsearch
  clusterIP: None
  ports:
    - port: 9200
      name: rest
    - port: 9300
      name: inter-node

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: elk
spec:
  serviceName: elasticsearch
  replicas: 2
  selector:
    matchLabels:
      k8s-app: elasticsearch
  template:
    metadata:
      labels:
        k8s-app: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
        resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: elasticsearch-nfs-share
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-nfs-share-for-shapshot
          mountPath: /snapshot
        env:
          - name: cluster.name
            value: test.local
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: discovery.seed_hosts
            value: "elasticsearch-0.elasticsearch,elasticsearch-1.elasticsearch"
          - name: cluster.initial_master_nodes
            value: "elasticsearch-0,elasticsearch-1"
          - name: ES_JAVA_OPTS
            value: "-Xms512m -Xmx512m"
          - name: path.repo
            value: "/snapshot" 

      initContainers:
      - name: fix-permissions
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: elasticsearch-nfs-share
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-nfs-share-for-shapshot
          mountPath: /snapshot

      - name: fix-permissions2
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "chown -R 1000:1000 /snapshot"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: elasticsearch-nfs-share-for-shapshot
          mountPath: /snapshot

      - name: increase-vm-max-map
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: increase-fd-ulimit
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-nfs-share
      labels:
        k8s-app: elasticsearch
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: nfs-storageclass
      resources:
        requests:
          storage: 3Gi
  - metadata:
      name: elasticsearch-nfs-share-for-shapshot
      labels:
        k8s-app: elasticsearch
    spec:
      accessModes: [ "ReadWriteMany" ]
      storageClassName: nfs-storageclass
      resources:
        requests:
          storage: 2Gi








