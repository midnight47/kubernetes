apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
  labels:
    k8s-app: kube-apiserver
    kubespray: v2
  annotations:
    kubespray.etcd-cert/serial: "FA5B6081DE6ED985"
    kubespray.apiserver-cert/serial: "BFE0008E41A213F7"
spec:
  hostNetwork: true
  dnsPolicy: ClusterFirst
  priorityClassName: system-node-critical
  containers:
  - name: kube-apiserver
    image: gcr.io/google-containers/hyperkube-amd64:v1.18.3
    imagePullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 1000m
        memory: 5000M
      requests:
        cpu: 500m
        memory: 1024M
    command:
    - /hyperkube
    - kube-apiserver
    - --basic-auth-file=/etc/kubernetes/basic-user-auth/users.csv
    - --advertise-address=10.242.146.30
    - --etcd-servers=https://10.242.146.30:2379,https://10.242.146.31:2379,https://10.242.146.32:2379
    - --etcd-cafile=/etc/ssl/etcd/ssl/ca.pem
    - --etcd-certfile=/etc/ssl/etcd/ssl/node-prod-vsrv-kubemaster1.pem
    - --etcd-keyfile=/etc/ssl/etcd/ssl/node-prod-vsrv-kubemaster1-key.pem
    - --bind-address=0.0.0.0
    - --apiserver-count=3
    - --endpoint-reconciler-type=lease
    - --service-cluster-ip-range=13.100.0.0/16
    - --service-node-port-range=30000-32767
    - --client-ca-file=/etc/kubernetes/ssl/ca.pem
    - --profiling=False
    - --kubelet-client-certificate=/etc/kubernetes/ssl/node-prod-vsrv-kubemaster1.pem
    - --kubelet-client-key=/etc/kubernetes/ssl/node-prod-vsrv-kubemaster1-key.pem
    - --service-account-lookup=true
    - --kubelet-preferred-address-types=InternalDNS,InternalIP,Hostname,ExternalDNS,ExternalIP
    - --request-timeout=1m0s
    - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
    - --service-account-key-file=/etc/kubernetes/ssl/service-account-key.pem
    - --secure-port=6443
    - --insecure-port=0
    - --storage-backend=etcd3
    - --v=2
    - --allow-privileged=true
    - --anonymous-auth=True
    - --authorization-mode=Node,RBAC
    - --requestheader-client-ca-file=/etc/kubernetes/ssl/front-proxy-ca.pem
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --enable-aggregator-routing=False
    - --proxy-client-cert-file=/etc/kubernetes/ssl/front-proxy-client.pem
    - --proxy-client-key-file=/etc/kubernetes/ssl/front-proxy-client-key.pem
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 6443
        scheme: HTTPS
      failureThreshold: 8
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/kubernetes
      name: kubernetes-config
      readOnly: true
    - mountPath: /etc/ssl
      name: ssl-certs-host
      readOnly: true
    - mountPath: /etc/pki/tls
      name: etc-pki-tls
      readOnly: true
    - mountPath: /etc/pki/ca-trust
      name: etc-pki-ca-trust
      readOnly: true
    - mountPath: /etc/ssl/etcd/ssl
      name: etcd-certs
      readOnly: true
    - mountPath: /etc/kubernetes/basic-user-auth
      name: basic-auth-config
  volumes:
  - hostPath:
      path: /etc/kubernetes
    name: kubernetes-config
  - name: ssl-certs-host
    hostPath:
      path: /etc/ssl
  - name: etc-pki-tls
    hostPath:
      path: /etc/pki/tls
  - name: etc-pki-ca-trust
    hostPath:
      path: /etc/pki/ca-trust
  - hostPath:
      path: /etc/ssl/etcd/ssl
    name: etcd-certs
  - hostPath:
      path: /etc/kubernetes/basic-user-auth
      type: ""
    name: basic-auth-config
